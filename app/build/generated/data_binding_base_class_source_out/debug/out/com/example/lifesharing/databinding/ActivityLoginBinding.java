// Generated by data binding compiler. Do not edit!
package com.example.lifesharing.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.lifesharing.R;
import com.example.lifesharing.login.LoginActivity;
import com.example.lifesharing.login.viewModel.LoginViewModel;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityLoginBinding extends ViewDataBinding {
  @NonNull
  public final TextInputEditText emailInputEditText;

  @NonNull
  public final TextInputLayout emailInputLayout;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final TextInputEditText passwordInput;

  @NonNull
  public final TextInputLayout passwordInputLayout;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView1;

  @Bindable
  protected LoginViewModel mViewModel;

  @Bindable
  protected LoginActivity mActivity;

  protected ActivityLoginBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextInputEditText emailInputEditText, TextInputLayout emailInputLayout, Button loginButton,
      TextInputEditText passwordInput, TextInputLayout passwordInputLayout, TextView textView,
      TextView textView1) {
    super(_bindingComponent, _root, _localFieldCount);
    this.emailInputEditText = emailInputEditText;
    this.emailInputLayout = emailInputLayout;
    this.loginButton = loginButton;
    this.passwordInput = passwordInput;
    this.passwordInputLayout = passwordInputLayout;
    this.textView = textView;
    this.textView1 = textView1;
  }

  public abstract void setViewModel(@Nullable LoginViewModel viewModel);

  @Nullable
  public LoginViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setActivity(@Nullable LoginActivity activity);

  @Nullable
  public LoginActivity getActivity() {
    return mActivity;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_login, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityLoginBinding>inflateInternal(inflater, R.layout.activity_login, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_login, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityLoginBinding>inflateInternal(inflater, R.layout.activity_login, null, false, component);
  }

  public static ActivityLoginBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityLoginBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityLoginBinding)bind(component, view, R.layout.activity_login);
  }
}
